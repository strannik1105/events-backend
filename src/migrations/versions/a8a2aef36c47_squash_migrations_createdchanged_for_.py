"""Squash migrations, CreatedChanged for event

Revision ID: a8a2aef36c47
Revises:
Create Date: 2024-02-25 21:34:09.972979

"""

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "a8a2aef36c47"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA users")
    op.execute("CREATE SCHEMA events")
    op.create_table(
        "user",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("SUPERUSER", "ADMIN", "MEMBER", name="role"),
            nullable=True,
        ),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("changed_at", sa.DateTime(), nullable=True),
        sa.Column("changed_by", sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint("sid"),
        schema="users",
        comment="Table with all users",
    )
    op.create_index(
        op.f("ix_users_user_sid"), "user", ["sid"], unique=True, schema="users"
    )
    op.create_table(
        "event",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("datetime_start", sa.DateTime(), nullable=False),
        sa.Column("datetime_end", sa.DateTime(), nullable=False),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("changed_at", sa.DateTime(), nullable=True),
        sa.Column("changed_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["changed_by"],
            ["users.user.sid"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.user.sid"],
        ),
        sa.PrimaryKeyConstraint("sid"),
        schema="events",
    )
    op.create_index(
        op.f("ix_events_event_sid"),
        "event",
        ["sid"],
        unique=True,
        schema="events",
    )
    op.create_table(
        "event_content",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("event_sid", sa.UUID(), nullable=False),
        sa.Column("sid", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_sid"],
            ["events.event.sid"],
        ),
        sa.PrimaryKeyConstraint("sid"),
        schema="events",
    )
    op.create_index(
        op.f("ix_events_event_content_sid"),
        "event_content",
        ["sid"],
        unique=True,
        schema="events",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_events_event_content_sid"),
        table_name="event_content",
        schema="events",
    )
    op.drop_table("event_content", schema="events")
    op.drop_index(
        op.f("ix_events_event_sid"), table_name="event", schema="events"
    )
    op.drop_table("event", schema="events")
    op.drop_index(op.f("ix_users_user_sid"), table_name="user", schema="users")
    op.drop_table("user", schema="users")
    op.execute("DROP SCHEMA events")
    op.execute("DROP SCHEMA users")
    op.execute("DROP TYPE public.role")
    # ### end Alembic commands ###
